// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/NetifeMessage.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace NetifeMessage {
  /// <summary>
  /// Dispatcher 服务
  /// </summary>
  public static partial class NetifeService
  {
    static readonly string __ServiceName = "NetifeMessage.NetifeService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NetifeMessage.NetifeProbeRequest> __Marshaller_NetifeMessage_NetifeProbeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NetifeMessage.NetifeProbeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NetifeMessage.NetifeProbeResponse> __Marshaller_NetifeMessage_NetifeProbeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NetifeMessage.NetifeProbeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NetifeMessage.NetifeRegisterRequest> __Marshaller_NetifeMessage_NetifeRegisterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NetifeMessage.NetifeRegisterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NetifeMessage.NetifeRegisterResponse> __Marshaller_NetifeMessage_NetifeRegisterResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NetifeMessage.NetifeRegisterResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NetifeMessage.NetifeComposerRequest> __Marshaller_NetifeMessage_NetifeComposerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NetifeMessage.NetifeComposerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NetifeMessage.NetifeComposerResponse> __Marshaller_NetifeMessage_NetifeComposerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NetifeMessage.NetifeComposerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NetifeMessage.NetifePluginCommandRequest> __Marshaller_NetifeMessage_NetifePluginCommandRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NetifeMessage.NetifePluginCommandRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NetifeMessage.NetifePluginCommandResponse> __Marshaller_NetifeMessage_NetifePluginCommandResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NetifeMessage.NetifePluginCommandResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NetifeMessage.NetifeScriptRegisterRequest> __Marshaller_NetifeMessage_NetifeScriptRegisterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NetifeMessage.NetifeScriptRegisterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NetifeMessage.NetifeScriptRegisterResponse> __Marshaller_NetifeMessage_NetifeScriptRegisterResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NetifeMessage.NetifeScriptRegisterResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NetifeMessage.NetifeScriptDebuggerRequest> __Marshaller_NetifeMessage_NetifeScriptDebuggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NetifeMessage.NetifeScriptDebuggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NetifeMessage.NetifeScriptDebuggerResponse> __Marshaller_NetifeMessage_NetifeScriptDebuggerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NetifeMessage.NetifeScriptDebuggerResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NetifeMessage.NetifeProbeRequest, global::NetifeMessage.NetifeProbeResponse> __Method_ProcessProbe = new grpc::Method<global::NetifeMessage.NetifeProbeRequest, global::NetifeMessage.NetifeProbeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ProcessProbe",
        __Marshaller_NetifeMessage_NetifeProbeRequest,
        __Marshaller_NetifeMessage_NetifeProbeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NetifeMessage.NetifeRegisterRequest, global::NetifeMessage.NetifeRegisterResponse> __Method_Register = new grpc::Method<global::NetifeMessage.NetifeRegisterRequest, global::NetifeMessage.NetifeRegisterResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Register",
        __Marshaller_NetifeMessage_NetifeRegisterRequest,
        __Marshaller_NetifeMessage_NetifeRegisterResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NetifeMessage.NetifeComposerRequest, global::NetifeMessage.NetifeComposerResponse> __Method_Composer = new grpc::Method<global::NetifeMessage.NetifeComposerRequest, global::NetifeMessage.NetifeComposerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Composer",
        __Marshaller_NetifeMessage_NetifeComposerRequest,
        __Marshaller_NetifeMessage_NetifeComposerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NetifeMessage.NetifePluginCommandRequest, global::NetifeMessage.NetifePluginCommandResponse> __Method_Command = new grpc::Method<global::NetifeMessage.NetifePluginCommandRequest, global::NetifeMessage.NetifePluginCommandResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Command",
        __Marshaller_NetifeMessage_NetifePluginCommandRequest,
        __Marshaller_NetifeMessage_NetifePluginCommandResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NetifeMessage.NetifeScriptRegisterRequest, global::NetifeMessage.NetifeScriptRegisterResponse> __Method_ScriptRegister = new grpc::Method<global::NetifeMessage.NetifeScriptRegisterRequest, global::NetifeMessage.NetifeScriptRegisterResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ScriptRegister",
        __Marshaller_NetifeMessage_NetifeScriptRegisterRequest,
        __Marshaller_NetifeMessage_NetifeScriptRegisterResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NetifeMessage.NetifeScriptDebuggerRequest, global::NetifeMessage.NetifeScriptDebuggerResponse> __Method_ScriptDebug = new grpc::Method<global::NetifeMessage.NetifeScriptDebuggerRequest, global::NetifeMessage.NetifeScriptDebuggerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ScriptDebug",
        __Marshaller_NetifeMessage_NetifeScriptDebuggerRequest,
        __Marshaller_NetifeMessage_NetifeScriptDebuggerResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::NetifeMessage.NetifeMessageReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of NetifeService</summary>
    [grpc::BindServiceMethod(typeof(NetifeService), "BindService")]
    public abstract partial class NetifeServiceBase
    {
      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NetifeMessage.NetifeProbeResponse> ProcessProbe(global::NetifeMessage.NetifeProbeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// [弃用] 只允许同一个对象链接 Dispatcher，不然调试不知道是不是真实数据
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NetifeMessage.NetifeRegisterResponse> Register(global::NetifeMessage.NetifeRegisterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// [等待 Probe 中]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NetifeMessage.NetifeComposerResponse> Composer(global::NetifeMessage.NetifeComposerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NetifeMessage.NetifePluginCommandResponse> Command(global::NetifeMessage.NetifePluginCommandRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// [弃用] 通过框架直接加载
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NetifeMessage.NetifeScriptRegisterResponse> ScriptRegister(global::NetifeMessage.NetifeScriptRegisterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// [开发中]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NetifeMessage.NetifeScriptDebuggerResponse> ScriptDebug(global::NetifeMessage.NetifeScriptDebuggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for NetifeService</summary>
    public partial class NetifeServiceClient : grpc::ClientBase<NetifeServiceClient>
    {
      /// <summary>Creates a new client for NetifeService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public NetifeServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for NetifeService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public NetifeServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected NetifeServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected NetifeServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NetifeMessage.NetifeProbeResponse ProcessProbe(global::NetifeMessage.NetifeProbeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProcessProbe(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NetifeMessage.NetifeProbeResponse ProcessProbe(global::NetifeMessage.NetifeProbeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ProcessProbe, null, options, request);
      }
      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NetifeMessage.NetifeProbeResponse> ProcessProbeAsync(global::NetifeMessage.NetifeProbeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProcessProbeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NetifeMessage.NetifeProbeResponse> ProcessProbeAsync(global::NetifeMessage.NetifeProbeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ProcessProbe, null, options, request);
      }
      /// <summary>
      /// [弃用] 只允许同一个对象链接 Dispatcher，不然调试不知道是不是真实数据
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NetifeMessage.NetifeRegisterResponse Register(global::NetifeMessage.NetifeRegisterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Register(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// [弃用] 只允许同一个对象链接 Dispatcher，不然调试不知道是不是真实数据
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NetifeMessage.NetifeRegisterResponse Register(global::NetifeMessage.NetifeRegisterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Register, null, options, request);
      }
      /// <summary>
      /// [弃用] 只允许同一个对象链接 Dispatcher，不然调试不知道是不是真实数据
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NetifeMessage.NetifeRegisterResponse> RegisterAsync(global::NetifeMessage.NetifeRegisterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// [弃用] 只允许同一个对象链接 Dispatcher，不然调试不知道是不是真实数据
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NetifeMessage.NetifeRegisterResponse> RegisterAsync(global::NetifeMessage.NetifeRegisterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Register, null, options, request);
      }
      /// <summary>
      /// [等待 Probe 中]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NetifeMessage.NetifeComposerResponse Composer(global::NetifeMessage.NetifeComposerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Composer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// [等待 Probe 中]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NetifeMessage.NetifeComposerResponse Composer(global::NetifeMessage.NetifeComposerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Composer, null, options, request);
      }
      /// <summary>
      /// [等待 Probe 中]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NetifeMessage.NetifeComposerResponse> ComposerAsync(global::NetifeMessage.NetifeComposerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ComposerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// [等待 Probe 中]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NetifeMessage.NetifeComposerResponse> ComposerAsync(global::NetifeMessage.NetifeComposerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Composer, null, options, request);
      }
      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NetifeMessage.NetifePluginCommandResponse Command(global::NetifeMessage.NetifePluginCommandRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Command(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NetifeMessage.NetifePluginCommandResponse Command(global::NetifeMessage.NetifePluginCommandRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Command, null, options, request);
      }
      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NetifeMessage.NetifePluginCommandResponse> CommandAsync(global::NetifeMessage.NetifePluginCommandRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CommandAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NetifeMessage.NetifePluginCommandResponse> CommandAsync(global::NetifeMessage.NetifePluginCommandRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Command, null, options, request);
      }
      /// <summary>
      /// [弃用] 通过框架直接加载
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NetifeMessage.NetifeScriptRegisterResponse ScriptRegister(global::NetifeMessage.NetifeScriptRegisterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ScriptRegister(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// [弃用] 通过框架直接加载
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NetifeMessage.NetifeScriptRegisterResponse ScriptRegister(global::NetifeMessage.NetifeScriptRegisterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ScriptRegister, null, options, request);
      }
      /// <summary>
      /// [弃用] 通过框架直接加载
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NetifeMessage.NetifeScriptRegisterResponse> ScriptRegisterAsync(global::NetifeMessage.NetifeScriptRegisterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ScriptRegisterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// [弃用] 通过框架直接加载
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NetifeMessage.NetifeScriptRegisterResponse> ScriptRegisterAsync(global::NetifeMessage.NetifeScriptRegisterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ScriptRegister, null, options, request);
      }
      /// <summary>
      /// [开发中]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NetifeMessage.NetifeScriptDebuggerResponse ScriptDebug(global::NetifeMessage.NetifeScriptDebuggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ScriptDebug(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// [开发中]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NetifeMessage.NetifeScriptDebuggerResponse ScriptDebug(global::NetifeMessage.NetifeScriptDebuggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ScriptDebug, null, options, request);
      }
      /// <summary>
      /// [开发中]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NetifeMessage.NetifeScriptDebuggerResponse> ScriptDebugAsync(global::NetifeMessage.NetifeScriptDebuggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ScriptDebugAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// [开发中]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NetifeMessage.NetifeScriptDebuggerResponse> ScriptDebugAsync(global::NetifeMessage.NetifeScriptDebuggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ScriptDebug, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override NetifeServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new NetifeServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(NetifeServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ProcessProbe, serviceImpl.ProcessProbe)
          .AddMethod(__Method_Register, serviceImpl.Register)
          .AddMethod(__Method_Composer, serviceImpl.Composer)
          .AddMethod(__Method_Command, serviceImpl.Command)
          .AddMethod(__Method_ScriptRegister, serviceImpl.ScriptRegister)
          .AddMethod(__Method_ScriptDebug, serviceImpl.ScriptDebug).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, NetifeServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ProcessProbe, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NetifeMessage.NetifeProbeRequest, global::NetifeMessage.NetifeProbeResponse>(serviceImpl.ProcessProbe));
      serviceBinder.AddMethod(__Method_Register, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NetifeMessage.NetifeRegisterRequest, global::NetifeMessage.NetifeRegisterResponse>(serviceImpl.Register));
      serviceBinder.AddMethod(__Method_Composer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NetifeMessage.NetifeComposerRequest, global::NetifeMessage.NetifeComposerResponse>(serviceImpl.Composer));
      serviceBinder.AddMethod(__Method_Command, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NetifeMessage.NetifePluginCommandRequest, global::NetifeMessage.NetifePluginCommandResponse>(serviceImpl.Command));
      serviceBinder.AddMethod(__Method_ScriptRegister, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NetifeMessage.NetifeScriptRegisterRequest, global::NetifeMessage.NetifeScriptRegisterResponse>(serviceImpl.ScriptRegister));
      serviceBinder.AddMethod(__Method_ScriptDebug, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NetifeMessage.NetifeScriptDebuggerRequest, global::NetifeMessage.NetifeScriptDebuggerResponse>(serviceImpl.ScriptDebug));
    }

  }
  /// <summary>
  /// 消息上报
  /// </summary>
  public static partial class NetifePost
  {
    static readonly string __ServiceName = "NetifeMessage.NetifePost";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NetifeMessage.NetifeProbeRequest> __Marshaller_NetifeMessage_NetifeProbeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NetifeMessage.NetifeProbeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NetifeMessage.NetifeProbeResponse> __Marshaller_NetifeMessage_NetifeProbeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NetifeMessage.NetifeProbeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NetifeMessage.NetifeScriptCommandRequest> __Marshaller_NetifeMessage_NetifeScriptCommandRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NetifeMessage.NetifeScriptCommandRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::NetifeMessage.NetifeScriptCommandResponse> __Marshaller_NetifeMessage_NetifeScriptCommandResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NetifeMessage.NetifeScriptCommandResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NetifeMessage.NetifeProbeRequest, global::NetifeMessage.NetifeProbeResponse> __Method_UploadRequest = new grpc::Method<global::NetifeMessage.NetifeProbeRequest, global::NetifeMessage.NetifeProbeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UploadRequest",
        __Marshaller_NetifeMessage_NetifeProbeRequest,
        __Marshaller_NetifeMessage_NetifeProbeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::NetifeMessage.NetifeScriptCommandRequest, global::NetifeMessage.NetifeScriptCommandResponse> __Method_UseScriptCommand = new grpc::Method<global::NetifeMessage.NetifeScriptCommandRequest, global::NetifeMessage.NetifeScriptCommandResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UseScriptCommand",
        __Marshaller_NetifeMessage_NetifeScriptCommandRequest,
        __Marshaller_NetifeMessage_NetifeScriptCommandResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::NetifeMessage.NetifeMessageReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of NetifePost</summary>
    [grpc::BindServiceMethod(typeof(NetifePost), "BindService")]
    public abstract partial class NetifePostBase
    {
      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NetifeMessage.NetifeProbeResponse> UploadRequest(global::NetifeMessage.NetifeProbeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::NetifeMessage.NetifeScriptCommandResponse> UseScriptCommand(global::NetifeMessage.NetifeScriptCommandRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for NetifePost</summary>
    public partial class NetifePostClient : grpc::ClientBase<NetifePostClient>
    {
      /// <summary>Creates a new client for NetifePost</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public NetifePostClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for NetifePost that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public NetifePostClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected NetifePostClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected NetifePostClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NetifeMessage.NetifeProbeResponse UploadRequest(global::NetifeMessage.NetifeProbeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NetifeMessage.NetifeProbeResponse UploadRequest(global::NetifeMessage.NetifeProbeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UploadRequest, null, options, request);
      }
      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NetifeMessage.NetifeProbeResponse> UploadRequestAsync(global::NetifeMessage.NetifeProbeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UploadRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NetifeMessage.NetifeProbeResponse> UploadRequestAsync(global::NetifeMessage.NetifeProbeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UploadRequest, null, options, request);
      }
      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NetifeMessage.NetifeScriptCommandResponse UseScriptCommand(global::NetifeMessage.NetifeScriptCommandRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UseScriptCommand(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::NetifeMessage.NetifeScriptCommandResponse UseScriptCommand(global::NetifeMessage.NetifeScriptCommandRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UseScriptCommand, null, options, request);
      }
      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NetifeMessage.NetifeScriptCommandResponse> UseScriptCommandAsync(global::NetifeMessage.NetifeScriptCommandRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UseScriptCommandAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// [已发布]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::NetifeMessage.NetifeScriptCommandResponse> UseScriptCommandAsync(global::NetifeMessage.NetifeScriptCommandRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UseScriptCommand, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override NetifePostClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new NetifePostClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(NetifePostBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_UploadRequest, serviceImpl.UploadRequest)
          .AddMethod(__Method_UseScriptCommand, serviceImpl.UseScriptCommand).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, NetifePostBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_UploadRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NetifeMessage.NetifeProbeRequest, global::NetifeMessage.NetifeProbeResponse>(serviceImpl.UploadRequest));
      serviceBinder.AddMethod(__Method_UseScriptCommand, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NetifeMessage.NetifeScriptCommandRequest, global::NetifeMessage.NetifeScriptCommandResponse>(serviceImpl.UseScriptCommand));
    }

  }
}
#endregion
